version: '3.8'

services:
  # ── DATABASE ──
  db:
    image: mariadb:${MARIADB_VERSION:-11.5}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wordpress_network

  # ── REDIS ──
  redis:
    image: redis:${REDIS_VERSION:-alpine}
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - wordpress_network

  # ── WORDPRESS ──
  wordpress:
    image: wordpress:${WORDPRESS_VERSION:-latest}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "${WORDPRESS_LOCAL_PORT:-8080}:80"
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER:-root}
      WORDPRESS_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # PHP upload configuration via environment variables (official WordPress image)
      WORDPRESS_UPLOAD_LIMIT: ${UPLOAD_MAX_FILESIZE:-64M}
      WORDPRESS_MEMORY_LIMIT: ${MEMORY_LIMIT:-256M}
      # Try PHP environment variables
      PHP_UPLOAD_MAX_FILESIZE: ${UPLOAD_MAX_FILESIZE:-64M}
      PHP_POST_MAX_SIZE: ${POST_MAX_SIZE:-64M}
      PHP_MEMORY_LIMIT: ${MEMORY_LIMIT:-256M}
      WORDPRESS_CONFIG_EXTRA: |
        if (!defined('WP_REDIS_HOST')) define('WP_REDIS_HOST', 'redis');
        if (!defined('WP_REDIS_PORT')) define('WP_REDIS_PORT', 6379);
        if (!defined('WP_REDIS_DATABASE')) define('WP_REDIS_DATABASE', 0);
        if (!defined('WP_REDIS_PASSWORD')) define('WP_REDIS_PASSWORD', '');
        if (!defined('WP_CACHE')) define('WP_CACHE', true);
        
        # Increase upload limits for high-resolution images
        define('WP_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        define('WP_MAX_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        
        # Force PHP upload settings - using override approach
        @ini_set('upload_max_filesize', '${UPLOAD_MAX_FILESIZE:-64M}');
        @ini_set('post_max_size', '${POST_MAX_SIZE:-64M}');
        @ini_set('memory_limit', '${MEMORY_LIMIT:-256M}');
        @ini_set('max_execution_time', '${MAX_EXECUTION_TIME:-300}');
        @ini_set('max_input_vars', '${MAX_INPUT_VARS:-3000}');
        
        # Upload limits handled by Must-Use plugin (see wp-content/mu-plugins/force-upload-limits.php)
        
        # WordPress constants for upload handling
        if (!defined('WP_MEMORY_LIMIT')) define('WP_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        if (!defined('WP_MAX_MEMORY_LIMIT')) define('WP_MAX_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        
        if (!defined('WP_DEBUG')) define('WP_DEBUG', false);
        if (!defined('WP_DEBUG_LOG')) define('WP_DEBUG_LOG', false);
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-content:/var/www/html/wp-content
      - ./plugins:/var/www/html/wp-content/plugins
      - ./themes:/var/www/html/wp-content/themes
    networks:
      - wordpress_network

  # ── WP-CLI INIT ──
  wp-cli-init:
    image: wordpress:cli:${WP_CLI_VERSION:-latest}
    restart: "no"
    user: "0:0"
    depends_on:
      db:
        condition: service_started
      wordpress:
        condition: service_started
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER:-root}
      WORDPRESS_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      WORDPRESS_TITLE: ${WORDPRESS_TITLE:-WordPress Multisite}
      WORDPRESS_ADMIN_USER: ${WORDPRESS_ADMIN_USER:-admin}
      WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD:-admin123}
      WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL:-admin@example.com}
      DOMAIN_CURRENT_SITE: ${DOMAIN_CURRENT_SITE:-localhost:${WORDPRESS_LOCAL_PORT:-8080}}
      SUBDOMAIN_INSTALL: ${SUBDOMAIN_INSTALL:-false}
      INSTALL_WORDFENCE: ${INSTALL_WORDFENCE:-true}
      INSTALL_YOAST_SEO: ${INSTALL_YOAST_SEO:-true}
      INSTALL_CONTACT_FORM_7: ${INSTALL_CONTACT_FORM_7:-true}
      INSTALL_WOOCOMMERCE: ${INSTALL_WOOCOMMERCE:-true}
      INSTALL_ELEMENTOR: ${INSTALL_ELEMENTOR:-true}
      INSTALL_GOOGLE_SITE_KIT: ${INSTALL_GOOGLE_SITE_KIT:-true}
      INSTALL_UPDRAFTPLUS: ${INSTALL_UPDRAFTPLUS:-true}
      INSTALL_NS_CLONER: ${INSTALL_NS_CLONER:-true}
      HOME: /tmp
    working_dir: /var/www/html
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-content:/var/www/html/wp-content
      - ./plugins:/var/www/html/wp-content/plugins
      - ./themes:/var/www/html/wp-content/themes
    command:
      - bash
      - -c
      - |
        set -e
        cd /var/www/html || exit 1
        
        echo "🔧 Starting upload permissions fix..."
        
        # Create the full directory structure step by step
        mkdir -p /var/www/html/wp-content || echo "wp-content dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads || echo "uploads dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads/sites || echo "sites dir creation failed, continuing..."
        
        # Create year/month structure for current and next year
        current_year=$(date +%Y)
        next_year=$((current_year + 1))
        for year in $current_year $next_year; do
          for month in $(seq -w 1 12); do
            mkdir -p "/var/www/html/wp-content/uploads/$year/$month" || echo "Year/month dir creation failed, continuing..."
          done
        done
        
        # Create common plugin directories
        mkdir -p /var/www/html/wp-content/uploads/elementor || echo "Elementor dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads/unlimited_elements || echo "Unlimited Elements dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads/unlimited_elements_cache || echo "Unlimited Elements cache dir creation failed, continuing..."
        
        # Create a custom PHP configuration that will be mounted
        mkdir -p /var/www/html/php-uploads-config || echo "PHP uploads config dir creation failed, continuing..."
        echo "; WordPress Upload Override" > /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini creation failed, continuing..."
        echo "upload_max_filesize = ${UPLOAD_MAX_FILESIZE:-64M}" >> /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini failed, continuing..."
        echo "post_max_size = ${POST_MAX_SIZE:-64M}" >> /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini failed, continuing..."
        echo "memory_limit = ${MEMORY_LIMIT:-256M}" >> /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini failed, continuing..."
        echo "max_execution_time = ${MAX_EXECUTION_TIME:-300}" >> /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini failed, continuing..."
        echo "max_input_vars = ${MAX_INPUT_VARS:-3000}" >> /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini failed, continuing..."
        echo "file_uploads = On" >> /var/www/html/php-uploads-config/uploads.ini || echo "PHP uploads ini failed, continuing..."
        
        # Also create .htaccess backup
        echo "# Upload size configuration via .htaccess" > /var/www/html/wp-content/.htaccess-upload || echo "htaccess upload config failed, continuing..."
        echo "php_value upload_max_filesize ${UPLOAD_MAX_FILESIZE:-64M}" >> /var/www/html/wp-content/.htaccess-upload || echo "htaccess upload config failed, continuing..."
        echo "php_value post_max_size ${POST_MAX_SIZE:-64M}" >> /var/www/html/wp-content/.htaccess-upload || echo "htaccess upload config failed, continuing..."
        echo "php_value memory_limit ${MEMORY_LIMIT:-256M}" >> /var/www/html/wp-content/.htaccess-upload || echo "htaccess upload config failed, continuing..."
        
        # Set ownership and permissions with specific focus on problematic directories
        chown -R 33:33 /var/www/html/wp-content || echo "Ownership change failed, continuing..."
        chmod -R 755 /var/www/html/wp-content/uploads || echo "Permission change failed, continuing..."
        
        # Specifically fix unlimited_elements_cache permissions (needs write access for plugin)
        chmod 777 /var/www/html/wp-content/uploads/unlimited_elements_cache || echo "Unlimited elements cache chmod failed, continuing..."
        chown -R 33:33 /var/www/html/wp-content/uploads/unlimited_elements_cache || echo "Unlimited elements cache chown failed, continuing..."
        
        # Ensure parent directory is also writable for file creation
        chmod 755 /var/www/html/wp-content/uploads || echo "Main uploads chmod failed, continuing..."
        chown 33:33 /var/www/html/wp-content/uploads || echo "Main uploads chown failed, continuing..."
        
        # Create security .htaccess
        echo "Options -Indexes" > /var/www/html/wp-content/uploads/.htaccess || echo "htaccess creation failed, continuing..."
        echo "Order deny,allow" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "Deny from all" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo '<FilesMatch "\.(jpg|jpeg|png|gif|webp|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|zip|rar)$">' >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "    Allow from all" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "</FilesMatch>" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo '<FilesMatch "\.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi)$">' >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "    Deny from all" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "</FilesMatch>" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        chown 33:33 /var/www/html/wp-content/uploads/.htaccess || echo "htaccess ownership failed, continuing..."
        
        echo "✅ Upload permissions fixed successfully"
        
        echo '⏳ Waiting for database and WordPress to be ready...'
        sleep 15
        
        echo '🔍 Checking if WordPress is already installed...'
        if su -s /bin/sh www-data -c 'wp core is-installed' 2>/dev/null; then
          echo '✅ WordPress is already installed!'
          echo '🔧 Checking if multisite is enabled...'
          if su -s /bin/sh www-data -c 'wp core is-installed --network' 2>/dev/null; then
            echo '✅ Multisite is already enabled!'
          else
            echo '🚀 Enabling multisite for existing WordPress...'
            su -s /bin/sh www-data -c "wp core multisite-install --title='${WORDPRESS_TITLE}' --admin_email='${WORDPRESS_ADMIN_EMAIL}'"
            echo '🔧 Adding multisite constants to wp-config.php...'
            su -s /bin/sh www-data -c "wp config set WP_ALLOW_MULTISITE true --raw"
            su -s /bin/sh www-data -c "wp config set MULTISITE true --raw"
            su -s /bin/sh www-data -c "wp config set SUBDOMAIN_INSTALL '${SUBDOMAIN_INSTALL:-false}' --raw"
            su -s /bin/sh www-data -c "wp config set DOMAIN_CURRENT_SITE '${DOMAIN_CURRENT_SITE}'"
            su -s /bin/sh www-data -c "wp config set PATH_CURRENT_SITE '/'"
            su -s /bin/sh www-data -c "wp config set SITE_ID_CURRENT_SITE 1 --raw"
            su -s /bin/sh www-data -c "wp config set BLOG_ID_CURRENT_SITE 1 --raw"
            echo '📄 Creating .htaccess for multisite...'
            if [ "${SUBDOMAIN_INSTALL:-false}" = "false" ]; then
              echo 'RewriteEngine On' > /var/www/html/.htaccess || echo '⚠️  .htaccess creation failed, continuing...'
              echo 'RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 1 failed, continuing...'
              echo 'RewriteBase /' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 2 failed, continuing...'
              echo 'RewriteRule ^index\.php$ - [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 3 failed, continuing...'
              echo '' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 4 failed, continuing...'
              echo '# add a trailing slash to /wp-admin' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 5 failed, continuing...'
              echo 'RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ $1wp-admin/ [R=301,L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 6 failed, continuing...'
              echo '' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 7 failed, continuing...'
              echo 'RewriteCond %{REQUEST_FILENAME} -f [OR]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 8 failed, continuing...'
              echo 'RewriteCond %{REQUEST_FILENAME} -d' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 9 failed, continuing...'
              echo 'RewriteRule ^ - [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 10 failed, continuing...'
              echo 'RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 11 failed, continuing...'
              echo 'RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 12 failed, continuing...'
              echo 'RewriteRule . index.php [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 13 failed, continuing...'
            fi
            chown www-data:www-data /var/www/html/.htaccess 2>/dev/null || echo '⚠️  .htaccess ownership failed, continuing...'
          fi
        else
          echo '📝 Installing WordPress...'
          su -s /bin/sh www-data -c "wp core install --url='https://${DOMAIN_CURRENT_SITE}' --title='${WORDPRESS_TITLE}' --admin_user='${WORDPRESS_ADMIN_USER}' --admin_password='${WORDPRESS_ADMIN_PASSWORD}' --admin_email='${WORDPRESS_ADMIN_EMAIL}' --skip-email"
          echo '🔧 Configuring WordPress...'
          su -s /bin/sh www-data -c "wp option update home 'https://${DOMAIN_CURRENT_SITE}'"
          su -s /bin/sh www-data -c "wp option update siteurl 'https://${DOMAIN_CURRENT_SITE}'"
          su -s /bin/sh www-data -c "wp rewrite structure '/%postname%/'"
          su -s /bin/sh www-data -c "wp rewrite flush"
          echo '✅ WordPress installed and configured successfully!'
          echo '🚀 Enabling multisite...'
          su -s /bin/sh www-data -c "wp core multisite-install --title='${WORDPRESS_TITLE}' --admin_email='${WORDPRESS_ADMIN_EMAIL}'"
          echo '🔧 Adding multisite constants to wp-config.php...'
          su -s /bin/sh www-data -c "wp config set WP_ALLOW_MULTISITE true --raw"
          su -s /bin/sh www-data -c "wp config set MULTISITE true --raw"
          su -s /bin/sh www-data -c "wp config set SUBDOMAIN_INSTALL '${SUBDOMAIN_INSTALL:-false}' --raw"
          su -s /bin/sh www-data -c "wp config set DOMAIN_CURRENT_SITE '${DOMAIN_CURRENT_SITE}'"
          su -s /bin/sh www-data -c "wp config set PATH_CURRENT_SITE '/'"
          su -s /bin/sh www-data -c "wp config set SITE_ID_CURRENT_SITE 1 --raw"
          su -s /bin/sh www-data -c "wp config set BLOG_ID_CURRENT_SITE 1 --raw"
          echo '📄 Creating .htaccess for multisite...'
          if [ "${SUBDOMAIN_INSTALL:-false}" = "false" ]; then
            echo 'RewriteEngine On' > /var/www/html/.htaccess || echo '⚠️  .htaccess creation failed, continuing...'
            echo 'RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 1 failed, continuing...'
            echo 'RewriteBase /' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 2 failed, continuing...'
            echo 'RewriteRule ^index\.php$ - [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 3 failed, continuing...'
            echo '' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 4 failed, continuing...'
            echo '# add a trailing slash to /wp-admin' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 5 failed, continuing...'
            echo 'RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ $1wp-admin/ [R=301,L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 6 failed, continuing...'
            echo '' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 7 failed, continuing...'
            echo 'RewriteCond %{REQUEST_FILENAME} -f [OR]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 8 failed, continuing...'
            echo 'RewriteCond %{REQUEST_FILENAME} -d' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 9 failed, continuing...'
            echo 'RewriteRule ^ - [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 10 failed, continuing...'
            echo 'RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 11 failed, continuing...'
            echo 'RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 12 failed, continuing...'
            echo 'RewriteRule . index.php [L]' >> /var/www/html/.htaccess || echo '⚠️  .htaccess rule 13 failed, continuing...'
          fi
          chown www-data:www-data /var/www/html/.htaccess 2>/dev/null || echo '⚠️  .htaccess ownership failed, continuing...'
          echo '✅ WordPress Multisite setup completed!'
        fi
        
        echo '🔧 Diagnosing PHP upload configuration...'
        
        # Check current PHP settings
        echo "=== PHP Configuration Diagnosis ==="
        su -s /bin/sh www-data -c "php -i | grep -E 'upload_max_filesize|post_max_size|memory_limit|max_execution_time|max_input_vars'" || echo '⚠️  PHP info failed, continuing...'
        
        echo "=== Loaded PHP INI Files ==="
        su -s /bin/sh www-data -c "php --ini" || echo '⚠️  PHP ini check failed, continuing...'
        
        echo "=== WordPress Upload Settings ==="
        su -s /bin/sh www-data -c "wp eval 'echo \"WordPress max upload: \" . wp_max_upload_size() / 1024 / 1024 . \"MB\\n\";'" || echo '⚠️  WordPress upload check failed, continuing...'
        
        echo "=== Applying PHP Upload Configuration to .htaccess ==="
        # Check if upload config already added to prevent duplicates
        if ! grep -q "Upload size configuration via .htaccess" /var/www/html/.htaccess 2>/dev/null; then
          if [ -f /var/www/html/wp-content/.htaccess-upload ]; then
            echo "" >> /var/www/html/.htaccess || echo "htaccess append failed, continuing..."
            cat /var/www/html/wp-content/.htaccess-upload >> /var/www/html/.htaccess || echo "htaccess upload config append failed, continuing..."
            chown www-data:www-data /var/www/html/.htaccess 2>/dev/null || echo "htaccess ownership failed, continuing..."
            echo "Upload config added to .htaccess"
          else
            echo "No upload config file found"
          fi
        else
          echo "Upload config already exists in .htaccess"
        fi
        
        echo "=== File System Check ==="
        echo ".htaccess contents:" && tail -20 /var/www/html/.htaccess 2>/dev/null || echo "Cannot read .htaccess"
        echo ""
        echo "Upload config file:" && cat /var/www/html/wp-content/.htaccess-upload 2>/dev/null || echo "Upload config not found"
        echo ""
        echo "Testing PHP settings after .htaccess:"
        
        echo "=== WordPress Filter Override Applied ==="
        echo "WordPress upload filters have been configured to force 64MB limit"
        
        echo "=== Force Restart PHP-FPM ==="
        # Try to restart PHP-FPM to pick up any configuration changes
        echo "Skipping PHP-FPM restart (requires different approach)"
        
        echo "=== Final WordPress Upload Test ==="
        sleep 3  # Wait for potential restart
        su -s /bin/sh www-data -c "wp eval 'echo \"Final WordPress max upload: \" . size_format(wp_max_upload_size()) . \"\\n\";'" || echo '⚠️  Final WordPress upload check failed, continuing...'
        
        echo "=== Debug File System ==="
        echo "PHP uploads config exists?" && ls -la /usr/local/etc/php/conf.d/uploads.ini 2>/dev/null || echo "PHP uploads.ini NOT FOUND in container"
        echo "WordPress volumes:" && ls -la /var/www/html/php-uploads-config/ 2>/dev/null || echo "No php-uploads-config in wordpress volume"
        echo "MU plugins dir:" && ls -la /var/www/html/wp-content/mu-plugins/ 2>/dev/null || echo "No mu-plugins dir yet"
        
        echo "=== Creating Must-Use Plugin for Upload Override ==="
        # Create a must-use plugin that forces upload limits
        mkdir -p /var/www/html/wp-content/mu-plugins || echo "MU plugins dir creation failed, continuing..."
        echo '<?php' > /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo '// Force Upload Limits - Must Use Plugin' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo 'add_filter("upload_size_limit", function() { return '$((${UPLOAD_MAX_FILESIZE:-64M} * 1024 * 1024))'; }, 999);' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo 'add_filter("wp_max_upload_size", function() { return '$((${UPLOAD_MAX_FILESIZE:-64M} * 1024 * 1024))'; }, 999);' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo 'add_action("init", function() { @ini_set("upload_max_filesize", "${UPLOAD_MAX_FILESIZE:-64M}"); @ini_set("post_max_size", "${POST_MAX_SIZE:-64M}"); });' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        chown www-data:www-data /var/www/html/wp-content/mu-plugins/force-upload-limits.php 2>/dev/null || echo 'MU plugin ownership failed, continuing...'
        echo "MU plugin created:" && cat /var/www/html/wp-content/mu-plugins/force-upload-limits.php 2>/dev/null || echo "Failed to read MU plugin"
        
        echo "=== Creating diagnostic page ==="
        # Create a diagnostic PHP page that works with WordPress
        echo '<?php' > /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo 'require_once("wp-load.php");' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo 'if (!current_user_can("administrator")) { wp_die("Access denied"); }' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo 'echo "<h1>Upload Diagnostics</h1>";' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo 'echo "upload_max_filesize: " . ini_get("upload_max_filesize") . "<br>";' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo 'echo "post_max_size: " . ini_get("post_max_size") . "<br>";' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo 'echo "WordPress max upload size: " . size_format(wp_max_upload_size()) . "<br>";' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        echo '?>' >> /var/www/html/upload-diagnostics.php || echo '⚠️  Diagnostic page creation failed, continuing...'
        chown www-data:www-data /var/www/html/upload-diagnostics.php 2>/dev/null || echo '⚠️  Diagnostic page ownership failed, continuing...'
        
        echo '✅ WordPress configuration completed successfully!'
        echo '🔍 Access upload diagnostics at: https://your-domain.com/upload-diagnostics.php'
    networks:
      - wordpress_network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  wordpress_data:
    driver: local

networks:
  wordpress_network:
    driver: bridge 