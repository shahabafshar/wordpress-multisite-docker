version: '3.8'

services:
  # ‚îÄ‚îÄ DATABASE ‚îÄ‚îÄ
  db:
    image: mariadb:${MARIADB_VERSION:-11.5}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wordpress_network

  # ‚îÄ‚îÄ REDIS ‚îÄ‚îÄ
  redis:
    image: redis:${REDIS_VERSION:-alpine}
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - wordpress_network

  # ‚îÄ‚îÄ WORDPRESS ‚îÄ‚îÄ
  wordpress:
    image: wordpress:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # PHP upload configuration via environment variables (official WordPress image)
      WORDPRESS_UPLOAD_LIMIT: ${UPLOAD_MAX_FILESIZE:-64M}
      WORDPRESS_MEMORY_LIMIT: ${MEMORY_LIMIT:-256M}
      # Try PHP environment variables
      PHP_UPLOAD_MAX_FILESIZE: ${UPLOAD_MAX_FILESIZE:-64M}
      PHP_POST_MAX_SIZE: ${POST_MAX_SIZE:-64M}
      PHP_MEMORY_LIMIT: ${MEMORY_LIMIT:-256M}
      WORDPRESS_CONFIG_EXTRA: |
        if (!defined('WP_REDIS_HOST')) define('WP_REDIS_HOST', 'redis');
        if (!defined('WP_REDIS_PORT')) define('WP_REDIS_PORT', 6379);
        if (!defined('WP_REDIS_DATABASE')) define('WP_REDIS_DATABASE', 0);
        if (!defined('WP_REDIS_PASSWORD')) define('WP_REDIS_PASSWORD', '');
        if (!defined('WP_CACHE')) define('WP_CACHE', true);
        
        # Increase upload limits for high-resolution images
        define('WP_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        define('WP_MAX_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        
        # Force PHP upload settings - using override approach
        @ini_set('upload_max_filesize', '${UPLOAD_MAX_FILESIZE:-64M}');
        @ini_set('post_max_size', '${POST_MAX_SIZE:-64M}');
        @ini_set('memory_limit', '${MEMORY_LIMIT:-256M}');
        @ini_set('max_execution_time', '${MAX_EXECUTION_TIME:-300}');
        @ini_set('max_input_vars', '${MAX_INPUT_VARS:-3000}');
        
        # Upload limits handled by Must-Use plugin (see wp-content/mu-plugins/force-upload-limits.php)
        
        # WordPress constants for upload handling
        if (!defined('WP_MEMORY_LIMIT')) define('WP_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        if (!defined('WP_MAX_MEMORY_LIMIT')) define('WP_MAX_MEMORY_LIMIT', '${MEMORY_LIMIT:-256M}');
        
        if (!defined('WP_DEBUG')) define('WP_DEBUG', false);
        if (!defined('WP_DEBUG_LOG')) define('WP_DEBUG_LOG', false);
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-content:/var/www/html/wp-content
      - ./plugins:/var/www/html/wp-content/plugins
      - ./themes:/var/www/html/wp-content/themes
    networks:
      - wordpress_network

  # ‚îÄ‚îÄ WP-CLI INIT (with merged permission fixing) ‚îÄ‚îÄ
  wp-cli-init:
    image: wordpress:cli
    restart: "no"
    user: "0:0"
    depends_on:
      db:
        condition: service_started
      wordpress:
        condition: service_started
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      WORDPRESS_TITLE: ${WORDPRESS_TITLE:-WordPress Multisite}
      WORDPRESS_ADMIN_USER: ${WORDPRESS_ADMIN_USER:-admin}
      WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD:-admin123}
      WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL:-admin@example.com}
      DOMAIN_CURRENT_SITE: ${DOMAIN_CURRENT_SITE:-localhost:8080}
      SUBDOMAIN_INSTALL: ${SUBDOMAIN_INSTALL:-false}
      INSTALL_WORDFENCE: ${INSTALL_WORDFENCE:-true}
      INSTALL_YOAST_SEO: ${INSTALL_YOAST_SEO:-true}
      INSTALL_CONTACT_FORM_7: ${INSTALL_CONTACT_FORM_7:-true}
      INSTALL_WOOCOMMERCE: ${INSTALL_WOOCOMMERCE:-true}
      INSTALL_ELEMENTOR: ${INSTALL_ELEMENTOR:-true}
      INSTALL_GOOGLE_SITE_KIT: ${INSTALL_GOOGLE_SITE_KIT:-true}
      INSTALL_UPDRAFTPLUS: ${INSTALL_UPDRAFTPLUS:-true}
      INSTALL_NS_CLONER: ${INSTALL_NS_CLONER:-true}
      HOME: /tmp
    working_dir: /var/www/html
    volumes:
      - wordpress_data:/var/www/html
      - ./wp-content:/var/www/html/wp-content
      - ./plugins:/var/www/html/wp-content/plugins
      - ./themes:/var/www/html/wp-content/themes
    command:
      - bash
      - -c
      - |
        set -e
        
        echo "üîß Starting WordPress initialization with permission fixing..."
        
        # ‚îÄ‚îÄ PERMISSION FIXING (merged from permfix-uploads) ‚îÄ‚îÄ
        echo "üîß Setting up upload directory permissions..."
        
        # Create the full directory structure step by step
        mkdir -p /var/www/html/wp-content/uploads || echo "uploads dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads/sites || echo "sites dir creation failed, continuing..."
        
        # Create year/month structure for current and next year
        current_year=$(date +%Y)
        next_year=$((current_year + 1))
        for year in $current_year $next_year; do
          for month in $(seq -w 1 12); do
            mkdir -p "/var/www/html/wp-content/uploads/$year/$month" || echo "Year/month dir creation failed, continuing..."
          done
        done
        
        # Create common plugin directories
        mkdir -p /var/www/html/wp-content/uploads/elementor || echo "Elementor dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads/unlimited_elements || echo "Unlimited Elements dir creation failed, continuing..."
        mkdir -p /var/www/html/wp-content/uploads/unlimited_elements_cache || echo "Unlimited Elements cache dir creation failed, continuing..."
        
        # Set ownership and permissions with specific focus on problematic directories
        chown -R 33:33 /var/www/html/wp-content || echo "Ownership change failed, continuing..."
        chmod -R 755 /var/www/html/wp-content/uploads || echo "Permission change failed, continuing..."
        
        # Specifically fix unlimited_elements_cache permissions (needs write access for plugin)
        chmod 777 /var/www/html/wp-content/uploads/unlimited_elements_cache || echo "Unlimited elements cache chmod failed, continuing..."
        chown -R 33:33 /var/www/html/wp-content/uploads/unlimited_elements_cache || echo "Unlimited elements cache chown failed, continuing..."
        
        # Ensure parent directory is also writable for file creation
        chmod 755 /var/www/html/wp-content/uploads || echo "Main uploads chmod failed, continuing..."
        chown 33:33 /var/www/html/wp-content/uploads || echo "Main uploads chown failed, continuing..."
        
        # Create security .htaccess
        echo "Options -Indexes" > /var/www/html/wp-content/uploads/.htaccess || echo "htaccess creation failed, continuing..."
        echo "Order deny,allow" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "Deny from all" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo '<FilesMatch "\.(jpg|jpeg|png|gif|webp|pdf|doc|docx|xls|xlsx|ppt|pptx|txt|zip|rar)$">' >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "    Allow from all" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "</FilesMatch>" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo '<FilesMatch "\.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi)$">' >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "    Deny from all" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        echo "</FilesMatch>" >> /var/www/html/wp-content/uploads/.htaccess || echo "htaccess line failed, continuing..."
        chown 33:33 /var/www/html/wp-content/uploads/.htaccess || echo "htaccess ownership failed, continuing..."
        
        echo "‚úÖ Upload permissions fixed successfully"
        
        # ‚îÄ‚îÄ WORDPRESS INSTALLATION ‚îÄ‚îÄ
        echo '‚è≥ Waiting for database and WordPress to be ready...'
        sleep 15
        
        # Check if WordPress is already installed
        if ! su -s /bin/sh www-data -c "wp core is-installed" 2>/dev/null; then
          echo 'üöÄ Installing WordPress...'
          su -s /bin/sh www-data -c "wp core install --url=${DOMAIN_CURRENT_SITE} --title='${WORDPRESS_TITLE}' --admin_user=${WORDPRESS_ADMIN_USER} --admin_password=${WORDPRESS_ADMIN_PASSWORD} --admin_email=${WORDPRESS_ADMIN_EMAIL} --skip-email"
          echo '‚úÖ WordPress installed successfully'
        else
          echo '‚ÑπÔ∏è  WordPress already installed, skipping installation'
        fi
        
        # ‚îÄ‚îÄ MULTISITE SETUP ‚îÄ‚îÄ
        echo 'üîß Setting up multisite...'
        
        # Check if multisite is already enabled
        if ! su -s /bin/sh www-data -c "wp site list" 2>/dev/null; then
          # Enable multisite
          su -s /bin/sh www-data -c "wp core multisite-convert --title='${WORDPRESS_TITLE}' --subdomains=${SUBDOMAIN_INSTALL}"
          
          # Create .htaccess for multisite
          echo 'RewriteEngine On' > /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess creation failed, continuing...'
          echo 'RewriteBase /' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess base failed, continuing...'
          echo 'RewriteRule ^index\.php$ - [L]' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess index failed, continuing...'
          echo 'RewriteCond %{REQUEST_FILENAME} !-f' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess cond failed, continuing...'
          echo 'RewriteCond %{REQUEST_FILENAME} !-d' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess cond2 failed, continuing...'
          echo 'RewriteRule . /index.php [L]' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess rule failed, continuing...'
          
          # Add PHP values for upload limits
          echo '' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess spacing failed, continuing...'
          echo '# PHP Upload Limits' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess comment failed, continuing...'
          echo 'php_value upload_max_filesize ${UPLOAD_MAX_FILESIZE:-64M}' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess upload failed, continuing...'
          echo 'php_value post_max_size ${POST_MAX_SIZE:-64M}' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess post failed, continuing...'
          echo 'php_value memory_limit ${MEMORY_LIMIT:-256M}' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess memory failed, continuing...'
          echo 'php_value max_execution_time ${MAX_EXECUTION_TIME:-300}' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess execution failed, continuing...'
          echo 'php_value max_input_vars ${MAX_INPUT_VARS:-3000}' >> /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess input failed, continuing...'
          
          chown www-data:www-data /var/www/html/.htaccess || echo '‚ö†Ô∏è  .htaccess ownership failed, continuing...'
          echo '‚úÖ Multisite enabled successfully'
        else
          echo '‚ÑπÔ∏è  Multisite already enabled, skipping setup'
        fi
        
        # ‚îÄ‚îÄ PLUGIN INSTALLATION ‚îÄ‚îÄ
        echo 'üîå Installing plugins...'
        
        # Array of plugins to install
        declare -a plugins=(
          "wordfence"
          "yoast-seo"
          "contact-form-7"
          "woocommerce"
          "elementor"
          "google-site-kit"
          "updraftplus"
          "ns-cloner"
        )
        
        # Array of plugin installation flags
        declare -a install_flags=(
          "${INSTALL_WORDFENCE}"
          "${INSTALL_YOAST_SEO}"
          "${INSTALL_CONTACT_FORM_7}"
          "${INSTALL_WOOCOMMERCE}"
          "${INSTALL_ELEMENTOR}"
          "${INSTALL_GOOGLE_SITE_KIT}"
          "${INSTALL_UPDRAFTPLUS}"
          "${INSTALL_NS_CLONER}"
        )
        
        # Install plugins based on flags
        for i in "${!plugins[@]}"; do
          plugin="${plugins[$i]}"
          should_install="${install_flags[$i]}"
          
          if [ "$should_install" = "true" ]; then
            if ! su -s /bin/sh www-data -c "wp plugin is-installed $plugin" 2>/dev/null; then
              echo "üì¶ Installing $plugin..."
              if su -s /bin/sh www-data -c "wp plugin install $plugin --activate" 2>/dev/null; then
                echo "‚úÖ $plugin installed and activated"
              else
                echo "‚ö†Ô∏è  Failed to install $plugin, continuing..."
              fi
            else
              echo "‚ÑπÔ∏è  $plugin already installed, skipping"
            fi
          else
            echo "‚è≠Ô∏è  Skipping $plugin (disabled in environment)"
          fi
        done
        
        # ‚îÄ‚îÄ THEME INSTALLATION ‚îÄ‚îÄ
        echo 'üé® Installing themes...'
        
        # Install Hello Elementor theme
        if ! su -s /bin/sh www-data -c "wp theme is-installed hello-elementor" 2>/dev/null; then
          echo "üì¶ Installing Hello Elementor theme..."
          if su -s /bin/sh www-data -c "wp theme install hello-elementor --activate" 2>/dev/null; then
            echo "‚úÖ Hello Elementor theme installed and activated"
          else
            echo "‚ö†Ô∏è  Failed to install Hello Elementor theme, continuing..."
          fi
        else
          echo "‚ÑπÔ∏è  Hello Elementor theme already installed, skipping"
        fi
        
        # ‚îÄ‚îÄ UPLOAD LIMITS MUST-USE PLUGIN ‚îÄ‚îÄ
        echo "üîß Creating Must-Use Plugin for Upload Override..."
        mkdir -p /var/www/html/wp-content/mu-plugins || echo "MU plugins dir creation failed, continuing..."
        echo '<?php' > /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo '// Force Upload Limits - Must Use Plugin' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo 'add_filter("upload_size_limit", function() { return 67108864; }, 999);' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo 'add_filter("wp_max_upload_size", function() { return 67108864; }, 999);' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        echo 'add_action("init", function() { @ini_set("upload_max_filesize", "64M"); @ini_set("post_max_size", "64M"); });' >> /var/www/html/wp-content/mu-plugins/force-upload-limits.php || echo 'MU plugin creation failed, continuing...'
        chown www-data:www-data /var/www/html/wp-content/mu-plugins/force-upload-limits.php 2>/dev/null || echo 'MU plugin ownership failed, continuing...'
        
        # ‚îÄ‚îÄ FINAL VERIFICATION ‚îÄ‚îÄ
        echo "‚úÖ WordPress initialization completed successfully!"
        echo "üìä Installation Summary:"
        echo "   - WordPress: ‚úÖ Installed"
        echo "   - Multisite: ‚úÖ Enabled"
        echo "   - Upload directories: ‚úÖ Created and secured"
        echo "   - Plugins: ‚úÖ Installed based on environment flags"
        echo "   - Theme: ‚úÖ Hello Elementor installed"
        echo "   - Upload limits: ‚úÖ Set to 64MB via MU plugin"
        echo ""
        echo "üåê Access your site at: http://${DOMAIN_CURRENT_SITE}"
        echo "üë§ Admin login: ${WORDPRESS_ADMIN_USER} / ${WORDPRESS_ADMIN_PASSWORD}"

volumes:
  db_data:
  redis_data:
  wordpress_data:

networks:
  wordpress_network:
    driver: bridge 